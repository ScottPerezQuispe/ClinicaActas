package presentation.view;


import application.casosdeuso.equipo.EliminarEquipoUseCase;
import application.casosdeuso.equipo.ListarEquipoUseCase;
import domain.entidades.Equipo;
import infrastructure.persistencia.repositorioimpl.EquipoRepositoryImpl;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import raven.modal.ModalDialog;
import raven.modal.Toast;
import raven.modal.component.SimpleModalBorder;
import raven.modal.listener.ModalCallback;

public class FrmProducto extends javax.swing.JPanel{

    public FrmProducto() {
        initComponents();
        
       
        cargarTabla(); // carga la tabla automáticamente al abrir
    }
    
     ListarEquipoUseCase equipoRepository = new ListarEquipoUseCase(new EquipoRepositoryImpl() );
 
    public void cargarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tb_Producto.getModel();
        modelo.setRowCount(0); // limpia la tabla

        List<Equipo> lista = equipoRepository.Listar(); // método que devuelve todos los equipos
        for (Equipo eq : lista) {
            modelo.addRow(new Object[]{
                eq.getIdEquipo(),
                eq.getNombreEquipo(),
                eq.getMarca(),
                eq.getModelo(),
                eq.getCantidad()
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txt_Buscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_Producto = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Mantenimiento de Equipo");

        jLabel1.setText("Nombre: ");

        tb_Producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Marca", "Modelo", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tb_Producto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(tb_Producto);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNuevo))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(221, 221, 221))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar))
                        .addGap(5, 5, 5)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
 
  // 1️⃣ Obtener el JFrame principal
     FrmMantenimientoProducto panel = new FrmMantenimientoProducto(this);
    SimpleModalBorder.Option[] options = new SimpleModalBorder.Option[]{
        new SimpleModalBorder.Option("Cancelar", SimpleModalBorder.CANCEL_OPTION), 
        new SimpleModalBorder.Option("Guardar", SimpleModalBorder.OK_OPTION)          
    };
    SimpleModalBorder modal = new SimpleModalBorder(
    panel,
    "Registrar Nuevo Equipo",  
    options,
    (ModalCallback)(mc, event) -> {
       
        if (event == SimpleModalBorder.OK_OPTION) {
             panel.guardarEquipo(); 
            if (panel.wasSuccessful()) {
              //  controller.close();     
                 cargarTabla(); 
                Toast.show(this, Toast.Type.SUCCESS, "✅ Guardado correctamente");
            }
 
        } else if (event == SimpleModalBorder.CANCEL_OPTION) {
            //controller.close();
        }
        
    }
);

ModalDialog.showModal(this, modal);
    
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tb_Producto.getSelectedRow(); // obtiene la fila seleccionada

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "⚠️ Selecciona un equipo de la tabla.");
            return;
        }

        // Supongamos que la primera columna contiene el ID del equipo
        int idEquipo = Integer.parseInt(tb_Producto.getValueAt(fila, 0).toString());

        int confirm = JOptionPane.showConfirmDialog(
            null,
            "¿Seguro que deseas eliminar este equipo?",
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            EliminarEquipoUseCase dao = new EliminarEquipoUseCase(new EquipoRepositoryImpl());
            if (dao.Eliminar(idEquipo)) {
                JOptionPane.showMessageDialog(null, "✅ Equipo eliminado correctamente.");
                    cargarTabla(); // Método para refrescar los datos
            } else {
                JOptionPane.showMessageDialog(null, "❌ Error al eliminar equipo");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       /* int fila = tb_Producto.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "⚠️ Selecciona un equipo para editar");
            return;
        }

        // Crear el JDialog (sin ventana padre)
        Acta_Update ventana = new Acta_Update(null, true);

        // Pasar los datos desde la tabla
        ventana.setDatos(
            tb_Producto.getValueAt(fila, 1).toString(), // Nombre
            tb_Producto.getValueAt(fila, 2).toString(), // Marca
            tb_Producto.getValueAt(fila, 3).toString(), // Modelo
            tb_Producto.getValueAt(fila, 4).toString(), // Cantidad
            Integer.parseInt(tb_Producto.getValueAt(fila, 0).toString()) // ID
        );

        // Mostrar el formulario
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);

        // Refrescar la tabla al cerrar el diálogo
        cargarTabla();*/
       
       int fila = tb_Producto.getSelectedRow();

    if (fila == -1) {
        JOptionPane.showMessageDialog(null, "⚠️ Selecciona un equipo para editar");
        return;
    }

    // 1. Obtener los datos de la fila seleccionada
    int idEquipo = Integer.parseInt(tb_Producto.getValueAt(fila, 0).toString());
    String nombre = tb_Producto.getValueAt(fila, 1).toString();
    String marca = tb_Producto.getValueAt(fila, 2).toString();
    String modelo = tb_Producto.getValueAt(fila, 3).toString();
    int cantidad = Integer.parseInt(tb_Producto.getValueAt(fila, 4).toString());

    // 2. Crear una instancia de Equipo con los datos
    Equipo equipoAEditar = new Equipo();
    equipoAEditar.setIdEquipo(idEquipo);
    equipoAEditar.setNombreEquipo(nombre);
    equipoAEditar.setMarca(marca);
    equipoAEditar.setModelo(modelo);
    equipoAEditar.setCantidad(cantidad);
    
    // 3. Crear el panel de mantenimiento y pasarle los datos (necesitarás un nuevo constructor/método)
    // Usamos el panel de registro, pero con una bandera de edición
    FrmMantenimientoProducto panel = new FrmMantenimientoProducto(this, equipoAEditar);
    
    // 4. Definir las opciones del modal (Cancelar y Guardar)
    SimpleModalBorder.Option[] options = new SimpleModalBorder.Option[]{
        new SimpleModalBorder.Option("Cancelar", SimpleModalBorder.CANCEL_OPTION), 
        new SimpleModalBorder.Option("Actualizar", SimpleModalBorder.OK_OPTION)      
    };

    // 5. Crear el modal
    SimpleModalBorder modal = new SimpleModalBorder(
        panel,
        "Editar Equipo: " + nombre, // Título dinámico
        options,
        // Eliminamos el DEFAULT_OPTION que estaba causando el error de constructor
        (ModalCallback)(mc, event) -> {
            
            if (event == SimpleModalBorder.OK_OPTION) {
                
               panel.ActualizarEquipo();
             
            if (panel.wasSuccessful()) {
              //  controller.close();     
                 cargarTabla(); 
                 Toast.show(this, Toast.Type.SUCCESS, "✅ Equipo actualizado correctamente");
            }
 
            } else if (event == SimpleModalBorder.CANCEL_OPTION) {
                //controller.close();
            }
            
            
            
        }
    );

    ModalDialog.showModal(this, modal);
    }//GEN-LAST:event_btnEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tb_Producto;
    private javax.swing.JTextField txt_Buscar;
    // End of variables declaration//GEN-END:variables
}
